/* === Base Layer === */
@layer base {
  :root {
    --cosmic-primary: #4da6ff;
    --cosmic-secondary: #ff4dff;
    --cosmic-accent: #f9cb28;
    --cosmic-bg-start: #1B2735;
    --cosmic-bg-end: #090A0F;
    --cosmic-glow: rgba(100, 200, 255, 0.9);
    --glow-intensity: 0.8;
    --glow-spread: 12px;
    --glow-transition: all 0.3s cubic-bezier(0.25, 1, 0.5, 1.5);
    --skill-size: 60px;
    --skill-circle-distance: 180px;
    --mobile-skill-size: 40px;
    --mobile-circle-distance: 120px;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  body {
    overflow-x: hidden;
  }

  .cosmic-environment {
    position: relative;
    min-height: 100vh;
    min-height: 100dvh;
    width: 100%;
    overflow: hidden;
    background: 
      radial-gradient(ellipse at bottom, var(--cosmic-bg-start) 0%, var(--cosmic-bg-end) 100%),
      linear-gradient(to bottom, rgba(27,39,53,0.2) 0%, rgba(9,10,15,0.8) 100%);
    color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding-top: 2rem;
    perspective: 1000px;
    isolation: isolate;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
}

/* === Title Styles === */
@layer titles {
  .title-container {
    position: relative;
    z-index: 100;
    text-align: center;
    margin-bottom: 2rem;
    padding: 0 1rem;
  }

  .cosmic-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    margin: 0;
    background: linear-gradient(90deg, 
      #ff4d4d, #f9cb28, #4dff4d, #4da6ff, #ff4dff);
    background-size: 400% 400%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: gradientShift 8s ease infinite, 
               float 6s ease-in-out infinite, 
               rotateSlight 10s linear infinite;
    filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.3));
    font-weight: 700;
    line-height: 1.2;
  }

  .cosmic-subtitle {
    font-size: clamp(1.2rem, 2vw, 1.5rem);
    opacity: 0.8;
    animation: float 7s ease-in-out infinite 0.5s;
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.4);
    margin-top: 0.5rem;
    font-weight: 300;
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-15px); }
  }

  @keyframes rotateSlight {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(1deg); }
  }
}

/* === Starfield Enhancements === */
@layer stars {
  .starfield {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    overflow: hidden;
    pointer-events: none;
  }

  .star {
    position: absolute;
    background: white;
    border-radius: 50%;
    animation: twinkle var(--duration) ease-in-out infinite var(--delay);
    filter: drop-shadow(0 0 3px rgba(255, 255, 255, 0.6));
    transition: var(--glow-transition);
    will-change: transform, opacity;
  }

  @keyframes twinkle {
    0%, 100% { opacity: var(--opacity); }
    50% { opacity: calc(var(--opacity) * 0.3); }
  }
}

/* === Shooting Stars === */
@layer shooting-stars {
  .shooting-stars {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none;
  }

  .shooting-star {
    position: absolute;
    width: 4px;
    height: 4px;
    background: white;
    border-radius: 50%;
    box-shadow: 
      0 0 10px 2px rgba(255, 255, 255, 0.8),
      0 0 20px 5px var(--cosmic-primary);
    animation: shooting var(--duration) linear infinite var(--delay);
    transition: var(--glow-transition);
    will-change: transform, opacity;
  }

  .shooting-star::before {
    content: '';
    position: absolute;
    width: 120px;
    height: 2px;
    background: linear-gradient(90deg, rgba(255,255,255,1), rgba(255,255,255,0));
    transform-origin: left center;
    transform: rotate(45deg);
  }

  @keyframes shooting {
    0% {
      transform: translateX(0) translateY(0);
      opacity: 1;
    }
    70%, 100% {
      transform: translateX(600px) translateY(300px);
      opacity: 0;
    }
  }
}

/* === Comet Enhancements === */
@layer comet {
  .comet-container {
    position: absolute;
    top: 30%;
    left: -100px;
    z-index: 10;
    animation: approach 1.5s forwards;
    will-change: transform;
  }

  .comet-core {
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    box-shadow: 
      0 0 15px 5px var(--cosmic-glow),
      0 0 30px 10px rgba(100, 200, 255, 0.5);
    animation: pulse 1s ease-in-out infinite alternate;
    transition: var(--glow-transition);
    will-change: transform, box-shadow;
  }

  .comet-aura {
    position: absolute;
    top: -10px;
    left: -10px;
    width: 40px;
    height: 40px;
    background: rgba(100, 200, 255, 0.3);
    border-radius: 50%;
    animation: pulse 1.5s ease-in-out infinite alternate 0.3s;
    will-change: transform, opacity;
  }

  .particle-trail {
    position: absolute;
    left: 20px;
    top: 10px;
    pointer-events: none;
  }

  .comet-particle {
    position: absolute;
    border-radius: 50%;
    background: white;
    animation: cometParticle var(--duration, 1s) linear infinite var(--delay, 0s);
    filter: drop-shadow(0 0 5px var(--glow-color, white));
    will-change: transform, opacity;
  }

  @keyframes pulse {
    0% { transform: scale(1); opacity: 0.8; }
    100% { transform: scale(1.2); opacity: 1; }
  }

  @keyframes approach {
    to { transform: translateX(calc(50vw - 100px)); }
  }

  @keyframes cometParticle {
    0% {
      transform: translate(0, 0);
      opacity: 1;
    }
    100% {
      transform: translate(var(--tx, 50px), var(--ty, 20px));
      opacity: 0;
    }
  }
}

/* === Asteroid Enhancements === */
@layer asteroid {
  .asteroid {
    position: absolute;
    top: 50%;
    right: -150px;
    width: 100px;
    height: 100px;
    background: #555;
    border-radius: 50%;
    z-index: 10;
    animation: asteroidApproach 1.5s forwards 0.5s;
    transition: var(--glow-transition);
    box-shadow: 0 0 20px 5px rgba(255, 200, 100, 0.3);
    will-change: transform;
  }

  .asteroid-surface {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    overflow: hidden;
  }

  .crater {
    position: absolute;
    background: #333;
    border-radius: 50%;
    transform: translateZ(calc(-1 * var(--depth)));
    will-change: transform;
  }

  .asteroid-glow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: radial-gradient(circle at 30% 30%, rgba(255,200,100,0.3), transparent 70%);
    animation: pulse 2s ease-in-out infinite alternate;
    will-change: transform, opacity;
  }

  .shaking {
    animation: shake 0.3s linear infinite;
  }

  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
  }

  @keyframes asteroidApproach {
    to { transform: translateX(calc(-50vw + 150px)) translateY(-50%); }
  }
}

/* === Explosion Effects === */
@layer explosion {
  .collision-effects {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 20;
    width: 0;
    height: 0;
    pointer-events: none;
  }

  .explosion-core {
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 50%;
    box-shadow: 0 0 40px 15px rgba(255, 200, 100, 0.9);
    transform: translate(-50%, -50%);
    will-change: transform, opacity;
  }

  .expanding {
    animation: expand 0.8s ease-out forwards;
  }

  .shockwave {
    position: absolute;
    border: 2px solid rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: shockwaveExpand 1.2s ease-out forwards 0.2s;
    will-change: transform, opacity;
  }

  .energy-pulse {
    position: absolute;
    width: 20px;
    height: 20px;
    background: radial-gradient(circle, rgba(255,255,255,0.8), transparent 70%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: pulse 0.5s ease-in-out infinite alternate;
    will-change: transform, opacity;
  }

  .explosion-rings {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
  }

  .explosion-ring {
    position: absolute;
    border: 2px solid;
    border-radius: 50%;
    animation: ringExpand 1s ease-out forwards;
    border-color: var(--color, white);
    transform: translate(-50%, -50%);
    will-change: transform, opacity;
  }

  .explosion-debris {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
  }

  .debris-particle {
    position: absolute;
    background: white;
    border-radius: 50%;
    animation: debrisFly var(--duration) ease-out forwards var(--delay);
    will-change: transform, opacity;
  }

  @keyframes expand {
    to {
      transform: translate(-50%, -50%) scale(35);
      opacity: 0;
    }
  }

  @keyframes shockwaveExpand {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(25); opacity: 0; }
  }

  @keyframes ringExpand {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(12); opacity: 0; }
  }

  @keyframes debrisFly {
    0% {
      transform: translate(0, 0);
      opacity: 1;
    }
    100% {
      transform: rotate(var(--angle)) translateX(var(--distance));
      opacity: 0;
    }
  }
}

/* === Skills Orb Styles === */
@layer skills {
  .exploding-skill {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: var(--z-index);
    transition: all 0.5s ease;
    animation: explodeOut 1s ease-out forwards var(--delay);
    will-change: transform;
  }

  .circle-formation {
    animation: toCircle 1.5s ease-in-out forwards;
  }

  @keyframes explodeOut {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }
    80% {
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
  }

  @keyframes toCircle {
    to {
      transform:
        translate(-50%, -50%)
        rotate(var(--final-angle))
        translateY(calc(-1 * var(--distance)))
        rotate(calc(-1 * var(--final-angle)));
    }
  }

  .skill-orb {
    width: var(--skill-size);
    height: var(--skill-size);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.8rem;
    box-shadow: 
      0 0 10px 2px rgba(255, 255, 255, 0.3),
      0 0 20px 5px var(--cosmic-glow);
    transition: 
      transform 0.3s ease,
      box-shadow 0.5s ease,
      filter 0.5s ease;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    cursor: pointer;
    overflow: visible;
    position: relative;
    will-change: transform, box-shadow;
  }

  .skill-orb:hover {
    transform: scale(1.3);
    box-shadow: 
      0 0 15px 5px var(--skill-color, var(--cosmic-primary)),
      0 0 30px 15px rgba(255, 255, 255, 0.6),
      0 0 45px 25px var(--skill-glow, rgba(100, 200, 255, 0.4));
    filter: brightness(1.5);
    z-index: 1000;
  }

  .skill-orb:hover::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    background: radial-gradient(
      circle at center,
      rgba(255, 255, 255, 0.8) 0%,
      transparent 70%
    );
    animation: pulse-glow 1.5s infinite ease-in-out;
    z-index: -1;
  }

  .skill-icon {
    transition: var(--glow-transition);
    text-shadow: 0 0 10px currentColor;
    position: relative;
    z-index: 2;
  }

  .skill-icon-img {
    width: 60%;
    height: 60%;
    border-radius: 20px;
    object-fit: contain;
    filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.7));
    transition: all 0.3s ease;
  }
.skill-icon-img:hover {
    filter: 
      drop-shadow(0 0 10px rgba(255, 255, 255, 0.9))
      brightness(1.2);
  }
  
  .skill-orb:hover .skill-icon-img {
    filter: 
      drop-shadow(0 0 8px rgba(255, 255, 255, 0.9))
      brightness(1.2);
  }

  .hover-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
  }

  .hover-particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: white;
    border-radius: 50%;
    filter: drop-shadow(0 0 3px currentColor);
    animation: float-up 2s infinite ease-in-out;
    opacity: 0;
    will-change: transform, opacity;
  }

  .skill-orb:hover .hover-particle {
    opacity: 1;
  }

  .light-rays {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
  }
  /* Enhanced Skill Info Tooltips */
  .skill-info {
    position: absolute;
    bottom: calc(-1 * var(--info-offset, 40px));
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.7);
    padding: 8px 12px;
    border-radius: 10px;
    opacity: 0;
    transition: 
      opacity 0.3s ease 0.1s,
      bottom 0.3s ease 0.1s;
    white-space: nowrap;
    pointer-events: none;
    font-size: 0.9rem;
    text-align: center;
    backdrop-filter: blur(2px);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    z-index: 10;
    min-width: 100px;
  }

  .skill-orb:hover .skill-info,
  .exploding-skill.hovered .skill-info {
    opacity: 1;
    bottom: calc(-1 * var(--info-offset-hover, 50px));
  }

  .circle-formation .skill-info {
    --info-offset: 60px;
    --info-offset-hover: 70px;
    transform: 
      translateX(-50%)
      rotate(calc(-1 * var(--final-angle)));
    transform-origin: bottom center;
  }

  .skill-name {
    display: block;
    font-weight: bold;
    color:white;
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
    margin-bottom: 2px;
  }

  @keyframes pulse-glow {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.5;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.1);
      opacity: 0.8;
    }
  }

  @keyframes float-up {
    0% {
      transform: translate(0, 0);
      opacity: 1;
    }
    100% {
      transform: translate(
        calc(var(--particle-x) * 30px),
        calc(var(--particle-y) * -50px)
      );
      opacity: 0;
    }
  }

 

  .skill-halo {
    position: absolute;
    top: -10px;
    left: -10px;
    width: calc(var(--skill-size) + 20px);
    height: calc(var(--skill-size) + 20px);
    border-radius: 50%;
    background: radial-gradient(circle, rgba(255,255,255,0.8), transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
    will-change: opacity;
  }

  .skill-sparkles {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
  }

  .sparkle {
    position: absolute;
    background: white;
    border-radius: 50%;
    animation: sparkleMove var(--duration) ease-in-out infinite var(--delay);
    filter: drop-shadow(0 0 3px gold);
    will-change: transform, opacity;
  }

  @keyframes sparkleMove {
    0% {
      transform: translate(0, 0);
      opacity: 0;
    }
    20% { opacity: 1; }
    100% {
      transform: rotate(var(--angle)) translateX(var(--distance));
      opacity: 0;
    }
  }

  .exploding-skill.hovered {
    transform: 
      translate(-50%, -50%)
      rotate(var(--final-angle))
      translateY(calc(-1 * var(--distance)))
      rotate(calc(-1 * var(--final-angle)))
      scale(var(--hover-scale));
    z-index: 100;
  }

  .exploding-skill.hovered .skill-halo {
    opacity: 0.7;
  }
}

/* === Final Circle Formation === */
@layer circle-formation {
  .final-circle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    height: 400px;
    border: 2px dashed rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    z-index: 4;
    animation: circlePulse 3s ease-in-out infinite;
    pointer-events: none;
    will-change: transform, opacity;
  }

  @keyframes circlePulse {
    0%, 100% { 
      opacity: 0.5; 
      transform: translate(-50%, -50%) scale(0.95); 
    }
    50% { 
      opacity: 0.8; 
      transform: translate(-50%, -50%) scale(1.05); 
    }
  }
}

/* === Constellation Lines === */
@layer constellations {
  .constellation-lines {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    height: 400px;
    z-index: 5;
    pointer-events: none;
  }

  .constellation-line {
    position: absolute;
    height: 2px;
    background: linear-gradient(90deg, 
      rgba(255,255,255,0.3), 
      rgba(255,255,255,0.8), 
      rgba(255,255,255,0.3));
    transform-origin: left center;
    top: 50%;
    left: 50%;
    animation: linePulse var(--duration) ease-in-out infinite var(--delay);
    transition: var(--glow-transition);
    will-change: transform, opacity;
  }

  @keyframes linePulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.8; }
  }
}

/* === Controls === */
/* @layer controls {
  .cosmic-controls {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
  }

  .reset-button {
    background: rgba(0, 0, 0, 0.7);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 20px;
    padding: 8px 16px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
  }

  .reset-button:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }
} */

/* === Responsive Adjustments === */
@layer responsive {
  @media (max-width: 768px) {
    .skill-orb {
      width: var(--mobile-skill-size);
      height: var(--mobile-skill-size);
      font-size: 1.2rem;
    }

    .circle-formation { 
      --distance: var(--mobile-circle-distance) !important; 
    }

    .final-circle {
      width: 250px;
      height: 250px;
    }

    .constellation-lines {
      width: 250px;
      height: 250px;
    }

    .skill-info {
      font-size: 0.8rem;
      padding: 6px 10px;
      min-width: 80px;
    }

    .circle-formation .skill-info {
      --info-offset: 50px;
      --info-offset-hover: 60px;
    }

    .skill-halo {
      width: calc(var(--mobile-skill-size) + 20px);
      height: calc(var(--mobile-skill-size) + 20px);
    }
  }

  @media (min-width: 1200px) {
    .skill-orb {
      width: 70px;
      height: 70px;
      font-size: 2rem;
    }

    .circle-formation { 
      --distance: 200px !important; 
    }

    .final-circle {
      width: 500px;
      height: 500px;
    }

    .constellation-lines {
      width: 500px;
      height: 500px;
    }

    .skill-info {
      font-size: 1rem;
    }

    .circle-formation .skill-info {
      --info-offset: 70px;
      --info-offset-hover: 80px;
    }
  }
}

/* === Accessibility Improvements === */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* === Performance Optimizations === */
.star, .shooting-star, .comet-particle, .sparkle, .hover-particle {
  will-change: transform, opacity;
}

/* === Fallbacks for Older Browsers === */
@supports not (backdrop-filter: blur(5px)) {
  .skill-orb {
    background: rgba(255, 255, 255, 0.15);
  }

  .skill-info {
    background: rgba(0, 0, 0, 0.9);
  }

  .reset-button {
    background: rgba(0, 0, 0, 0.9);
  }
}

@supports not (backdrop-filter: blur(5px)) {
  .cosmic-environment {
    background: linear-gradient(to bottom, var(--cosmic-bg-start), var(--cosmic-bg-end));
  }
}
